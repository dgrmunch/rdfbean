<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<sect1 id="spring-integration" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Spring integration</title>
    
    <sect2>
    
      <title>Basic wiring</title>
    
      <para>The following Spring XML configuration demonstrates a basic configuration for RDFBean persistence in Spring.</para>
    
<programlisting language="xml">
<![CDATA[    
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

  <bean id="propertyConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="properties">
      <bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
          <list>        
            <value>classpath:/persistence.properties</value>
          </list>
        </property>
      </bean>
    </property>
  </bean>  
  
  <bean id="repository" class="com.mysema.rdfbean.sesame.MemoryRepository">
    <property name="sources">
        <list>
            <bean class="com.mysema.rdfbean.model.io.RDFSource">
                <constructor-arg value="classpath:demo.owl"/>
                <constructor-arg value="RDFXML" />
                <constructor-arg value="http://www.mysema.com/rdfbean/demo"/>
            </bean>
            <bean class="com.mysema.rdfbean.model.io.RDFSource">
                <constructor-arg value="classpath:demodata.owl"/>
                <constructor-arg value="RDFXML" />
                <constructor-arg value="http://www.mysema.com/rdfbean/demodata"/>
            </bean>
        </list>
    </property>
     <property name="sesameInference" value="true"/>
  </bean>
 
  <bean id="configuration" class="com.mysema.rdfbean.object.DefaultConfiguration">
      <constructor-arg value="true"/>
      <constructor-arg>
          <list>
              <value>com.mysema.rdf.demo.domain.Person</value>
          </list>
      </constructor-arg>
      <property name="defaultContext" value="http://demo.mysema.com/rdfbean-demo"/>
  </bean>
  
  <bean id="sessionFactory" class="com.mysema.rdfbean.spring.ContextAwareSessionFactory"
        init-method="initialize" destroy-method="close">
    <property name="configuration" ref="configuration"/>
    <property name="repository" ref="repository"/>
  </bean>
  
  <bean id="transactionManager" class="com.mysema.rdfbean.spring.RDFBeanTransactionManager">
    <constructor-arg ref="sessionFactory"/>
  </bean>
  
  <bean id="demoService" class="com.mysema.rdf.demo.service.DemoService"/>
  
</beans>    
]]>
</programlisting>    
    
    </sect2>
    
    <sect2>
    
      <title>Transactional services</title>
    
      <para>To create transactional services you can annotate your services with Spring's transactional annotations.</para>
	  
	  <para>Here is a minimal example :</para>
	  
<programlisting language="java">
<![CDATA[    
public interface UserService {
    
    @Transactional(readOnly = true)
    User getUser(long id);
    
    @Transactional
    void saveUser(User user);
	
}	  
]]>
</programlisting>    

	<para>For details on how to enable Spring AOP with transactions refer to the Spring Reference Documentation.</para>
    
    </sect2>
    
    
</sect1>    